// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Product {
    id          String   @id @default(uuid())
    name        String
    description String
    price       Float
    rating      Int      @default(0)
    imageUrl    String
    colors      String[]

    orderProduct OrderProduct[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("products")
}

model OrderProduct {
    id        String  @id @default(uuid())
    quantity  Int
    color     String
    name      String
    order     Order   @relation(fields: [orderId], references: [id])
    orderId   String
    product   Product @relation(fields: [productId], references: [id])
    productId String
    price     Float

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([orderId, productId])
    @@map("order_products")
}

model Order {
    id String @id @default(uuid())

    products OrderProduct[]
    state    OrderState     @default(CART)

    user   User   @relation(fields: [userId], references: [id])
    userId String

    paidoutAt DateTime?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    card   Card?   @relation(fields: [cardId], references: [id])
    cardId String?

    address   Address? @relation(fields: [addressId], references: [id])
    addressId String?

    @@map("orders")
}

model User {
    id       String  @id @default(uuid())
    email    String  @unique
    password String
    orders   Order[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("users")
}

model Address {
    id           String @id @default(uuid())
    name         String
    addressLine1 String
    addressLine2 String
    city         String
    state        String
    zipCode      String
    country      String

    order Order[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("addresses")
}

model Card {
    id           String   @id @default(uuid())
    name         String
    number       String
    expiration   DateTime
    securityCode String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    order     Order[]

    @@map("cards")
}

enum OrderState {
    CART
    COMPLETED
}
